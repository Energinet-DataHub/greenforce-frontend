{
  "openapi": "3.0.4",
  "info": {
    "title": "mark-part",
    "version": "1.0"
  },
  "paths": {
    "/actor": {
      "get": {
        "tags": [
          "Actor"
        ],
        "operationId": "actorAll",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Actor"
        ],
        "operationId": "actorPOST",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateActorDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateActorDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateActorDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/actor/{actorId}": {
      "get": {
        "tags": [
          "Actor"
        ],
        "operationId": "actorGET",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActorDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Actor"
        ],
        "operationId": "actorPUT",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChangeActorDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChangeActorDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChangeActorDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/actor/{actorId}/name": {
      "put": {
        "tags": [
          "Actor"
        ],
        "operationId": "name",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ActorNameDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ActorNameDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ActorNameDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/actor/{actorId}/credentials": {
      "get": {
        "tags": [
          "Actor"
        ],
        "operationId": "credentialsGET",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActorCredentialsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActorCredentialsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActorCredentialsDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Actor"
        ],
        "operationId": "credentialsDELETE",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/actor/{actorId}/credentials/certificate": {
      "post": {
        "tags": [
          "Actor"
        ],
        "operationId": "certificate",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "certificate": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "certificate": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/actor/{actorId}/credentials/secret": {
      "post": {
        "tags": [
          "Actor"
        ],
        "operationId": "secret",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActorClientSecretDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActorClientSecretDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActorClientSecretDto"
                }
              }
            }
          }
        }
      }
    },
    "/actor/{actorId}/audit": {
      "get": {
        "tags": [
          "Actor"
        ],
        "operationId": "audit",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorAuditedChangeAuditLogDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorAuditedChangeAuditLogDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorAuditedChangeAuditLogDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/actor/{actorId}/delegations": {
      "get": {
        "tags": [
          "Actor"
        ],
        "operationId": "delegationsGET",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDelegationsForActorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDelegationsForActorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDelegationsForActorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/actor/delegations": {
      "post": {
        "tags": [
          "Actor"
        ],
        "operationId": "delegationsPOST",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProcessDelegationsDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProcessDelegationsDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProcessDelegationsDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/actor/delegations/{delegationId}": {
      "put": {
        "tags": [
          "Actor"
        ],
        "operationId": "delegationsPUT",
        "parameters": [
          {
            "name": "delegationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StopProcessDelegationDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StopProcessDelegationDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StopProcessDelegationDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/actor/{actorId}/consolidate": {
      "post": {
        "tags": [
          "Actor"
        ],
        "operationId": "consolidate",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConsolidationRequestDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConsolidationRequestDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConsolidationRequestDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/actor/consolidations": {
      "get": {
        "tags": [
          "Actor"
        ],
        "operationId": "consolidations",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetActorConsolidationsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetActorConsolidationsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetActorConsolidationsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/actor/contacts/public": {
      "get": {
        "tags": [
          "ActorContact"
        ],
        "operationId": "public",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorContactDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorContactDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorContactDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/actor/{actorId}/contact": {
      "get": {
        "tags": [
          "ActorContact"
        ],
        "operationId": "contactAll",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorContactDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorContactDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorContactDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ActorContact"
        ],
        "operationId": "contactPOST",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateActorContactDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateActorContactDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateActorContactDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/actor/{actorId}/contact/{contactId}": {
      "delete": {
        "tags": [
          "ActorContact"
        ],
        "operationId": "contactDELETE",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/query/selection-actors": {
      "get": {
        "tags": [
          "ActorQuery"
        ],
        "operationId": "selection-actors",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionActorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionActorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionActorDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/additional-recipients/{actorId}": {
      "get": {
        "tags": [
          "AdditionalRecipients"
        ],
        "operationId": "additional-recipientsAll",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdditionalRecipients"
        ],
        "operationId": "additional-recipients",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MeteringPointDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MeteringPointDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MeteringPointDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/audit-identity/{auditIdentityId}": {
      "get": {
        "tags": [
          "AuditIdentity"
        ],
        "operationId": "audit-identity",
        "parameters": [
          {
            "name": "auditIdentityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuditIdentityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditIdentityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditIdentityDto"
                }
              }
            }
          }
        }
      }
    },
    "/audit-identity": {
      "post": {
        "tags": [
          "AuditIdentity"
        ],
        "operationId": "audit-identityAll",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditIdentityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditIdentityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditIdentityDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/balance-responsibility-relations/{actorId}": {
      "get": {
        "tags": [
          "BalanceResponsibilityRelations"
        ],
        "operationId": "balance-responsibility-relations",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BalanceResponsibilityRelationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BalanceResponsibilityRelationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BalanceResponsibilityRelationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/balance-responsibility-relations/import": {
      "post": {
        "tags": [
          "BalanceResponsibilityRelations"
        ],
        "operationId": "import",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "balanceResponsibility": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "balanceResponsibility": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/GridArea": {
      "get": {
        "tags": [
          "GridArea"
        ],
        "operationId": "GridAreaAll",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GridAreaDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GridAreaDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GridAreaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/GridArea/{gridAreaId}": {
      "get": {
        "tags": [
          "GridArea"
        ],
        "operationId": "GridArea",
        "parameters": [
          {
            "name": "gridAreaId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GridAreaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GridAreaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GridAreaDto"
                }
              }
            }
          }
        }
      }
    },
    "/GridArea/{gridAreaId}/audit": {
      "get": {
        "tags": [
          "GridArea"
        ],
        "operationId": "audit2",
        "parameters": [
          {
            "name": "gridAreaId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GridAreaAuditedChangeAuditLogDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GridAreaAuditedChangeAuditLogDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GridAreaAuditedChangeAuditLogDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/GridAreaOverview": {
      "get": {
        "tags": [
          "GridAreaOverview"
        ],
        "operationId": "GridAreaOverview",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GridAreaOverviewItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GridAreaOverviewItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GridAreaOverviewItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/invite": {
      "post": {
        "tags": [
          "Invitation"
        ],
        "operationId": "invite",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserInvitationDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserInvitationDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserInvitationDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/{userId}/reinvite": {
      "put": {
        "tags": [
          "Invitation"
        ],
        "operationId": "reinvite",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Organization": {
      "get": {
        "tags": [
          "Organization"
        ],
        "operationId": "OrganizationAll",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organization"
        ],
        "operationId": "OrganizationPOST",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateOrganizationDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateOrganizationDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateOrganizationDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/Organization/{organizationId}": {
      "get": {
        "tags": [
          "Organization"
        ],
        "operationId": "OrganizationGET",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organization"
        ],
        "operationId": "OrganizationPUT",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChangeOrganizationDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChangeOrganizationDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChangeOrganizationDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Organization/{organizationId}/actor": {
      "get": {
        "tags": [
          "Organization"
        ],
        "operationId": "actorAll2",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Organization/{organizationId}/audit": {
      "get": {
        "tags": [
          "Organization"
        ],
        "operationId": "audit3",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationAuditedChangeAuditLogDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationAuditedChangeAuditLogDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationAuditedChangeAuditLogDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Organization/{businessRegisterIdentifier}/identity": {
      "get": {
        "tags": [
          "Organization"
        ],
        "operationId": "identity",
        "parameters": [
          {
            "name": "businessRegisterIdentifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationIdentityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationIdentityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationIdentityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Permission/{permissionId}": {
      "get": {
        "tags": [
          "Permission"
        ],
        "operationId": "PermissionGET",
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Permission"
        ],
        "operationId": "PermissionPUT",
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdatePermissionDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdatePermissionDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdatePermissionDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Permission": {
      "get": {
        "tags": [
          "Permission"
        ],
        "operationId": "PermissionAll",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Permission/{permissionId}/audit": {
      "get": {
        "tags": [
          "Permission"
        ],
        "operationId": "audit4",
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionAuditedChangeAuditLogDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionAuditedChangeAuditLogDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionAuditedChangeAuditLogDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Permission/relation": {
      "get": {
        "tags": [
          "Permission"
        ],
        "operationId": "relation",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/.well-known/openid-configuration": {
      "get": {
        "tags": [
          "Token"
        ],
        "operationId": "openid-configuration",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/token/keys": {
      "get": {
        "tags": [
          "Token"
        ],
        "operationId": "keys",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/token": {
      "post": {
        "tags": [
          "Token"
        ],
        "operationId": "token",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TokenRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TokenRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TokenRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/createDownloadToken": {
      "post": {
        "tags": [
          "Token"
        ],
        "operationId": "createDownloadToken",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/exchangeDownloadToken/{token}": {
      "post": {
        "tags": [
          "Token"
        ],
        "operationId": "exchangeDownloadToken",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeDownloadTokenDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeDownloadTokenDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeDownloadTokenDto"
                }
              }
            }
          }
        }
      }
    },
    "/user/actors": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "actors",
        "parameters": [
          {
            "name": "externalToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetActorsAssociatedWithExternalUserIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetActorsAssociatedWithExternalUserIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetActorsAssociatedWithExternalUserIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/{userId}/actors": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "actors2",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetActorsAssociatedWithUserResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetActorsAssociatedWithUserResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetActorsAssociatedWithUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/{userId}/audit": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "audit5",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAuditedChangeAuditLogDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAuditedChangeAuditLogDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAuditedChangeAuditLogDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{userId}/useridentity": {
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "useridentity",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserIdentityUpdateDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserIdentityUpdateDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserIdentityUpdateDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/userprofile": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "userprofileGET",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserProfileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserProfileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserProfileResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "userprofilePUT",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserProfileUpdateDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserProfileUpdateDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserProfileUpdateDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/initiate-mitid-signup": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "initiate-mitid-signup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/reset-mitid": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "reset-mitid",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/{userId}/deactivate": {
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "deactivate",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/{userId}/reactivate": {
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "reactivate",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/{userId}/reset-2fa": {
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "reset-2fa",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/{emailAddress}/check-domain": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "check-domain",
        "parameters": [
          {
            "name": "emailAddress",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/user/{emailAddress}/check-email": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "check-email",
        "parameters": [
          {
            "name": "emailAddress",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/UserOverview/users/search": {
      "post": {
        "tags": [
          "UserOverview"
        ],
        "operationId": "search",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortProperty",
            "in": "query",
            "schema": {
              "x-enumNames": [
                "FirstName",
                "LastName",
                "Email",
                "PhoneNumber",
                "CreatedDate",
                "Status",
                "LatestLoginAt"
              ],
              "allOf": [
                {
                  "$ref": "#/components/schemas/UserOverviewSortProperty"
                }
              ]
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "schema": {
              "x-enumNames": [
                "Asc",
                "Desc"
              ],
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserOverviewFilterDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserOverviewFilterDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserOverviewFilterDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserOverviewResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserOverviewResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserOverviewResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user-roles": {
      "get": {
        "tags": [
          "UserRole"
        ],
        "operationId": "user-rolesAll",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserRole"
        ],
        "operationId": "user-rolesPOST",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateUserRoleDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateUserRoleDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateUserRoleDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/user-roles/{userRoleId}": {
      "get": {
        "tags": [
          "UserRole"
        ],
        "operationId": "user-rolesGET",
        "parameters": [
          {
            "name": "userRoleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleWithPermissionsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleWithPermissionsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleWithPermissionsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserRole"
        ],
        "operationId": "user-rolesPUT",
        "parameters": [
          {
            "name": "userRoleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateUserRoleDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateUserRoleDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateUserRoleDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user-roles/assignedtopermission": {
      "get": {
        "tags": [
          "UserRole"
        ],
        "operationId": "assignedtopermission",
        "parameters": [
          {
            "name": "permissionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-roles/{userRoleId}/audit": {
      "get": {
        "tags": [
          "UserRole"
        ],
        "operationId": "audit6",
        "parameters": [
          {
            "name": "userRoleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleAuditedChangeAuditLogDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleAuditedChangeAuditLogDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleAuditedChangeAuditLogDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-roles/permissions": {
      "get": {
        "tags": [
          "UserRole"
        ],
        "operationId": "permissions",
        "parameters": [
          {
            "name": "eicFunction",
            "in": "query",
            "schema": {
              "x-enumNames": [
                "BalanceResponsibleParty",
                "BillingAgent",
                "EnergySupplier",
                "GridAccessProvider",
                "ImbalanceSettlementResponsible",
                "MeterOperator",
                "MeteredDataAdministrator",
                "MeteredDataResponsible",
                "MeteringPointAdministrator",
                "SystemOperator",
                "DanishEnergyAgency",
                "DataHubAdministrator",
                "IndependentAggregator",
                "SerialEnergyTrader",
                "Delegated",
                "ItSupplier"
              ],
              "allOf": [
                {
                  "$ref": "#/components/schemas/EicFunction"
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDetailsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDetailsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDetailsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-roles/{userRoleId}/deactivate": {
      "put": {
        "tags": [
          "UserRole"
        ],
        "operationId": "deactivate2",
        "parameters": [
          {
            "name": "userRoleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/actors/{actorId}/users/{userId}/roles": {
      "get": {
        "tags": [
          "UserRoleAssignment"
        ],
        "operationId": "rolesAll",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleDto"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserRoleAssignment"
        ],
        "operationId": "roles",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateUserRoleAssignmentsDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateUserRoleAssignmentsDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateUserRoleAssignmentsDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/actors/{actorId}/roles": {
      "get": {
        "tags": [
          "UserRoleAssignment"
        ],
        "operationId": "rolesAll2",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleDto"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActorAuditedChange": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Name",
          "Status",
          "ContactName",
          "ContactEmail",
          "ContactPhone",
          "ContactCategoryAdded",
          "ContactCategoryRemoved",
          "CertificateCredentials",
          "ClientSecretCredentials",
          "DelegationStart",
          "DelegationStop",
          "ConsolidationRequested",
          "ConsolidationCompleted",
          "AdditionalRecipientMeteringPointAdded",
          "AdditionalRecipientMeteringPointRemoved"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15
        ]
      },
      "ActorAuditedChangeAuditLogDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "change": {
            "readOnly": true,
            "x-enumNames": [
              "Name",
              "Status",
              "ContactName",
              "ContactEmail",
              "ContactPhone",
              "ContactCategoryAdded",
              "ContactCategoryRemoved",
              "CertificateCredentials",
              "ClientSecretCredentials",
              "DelegationStart",
              "DelegationStop",
              "ConsolidationRequested",
              "ConsolidationCompleted",
              "AdditionalRecipientMeteringPointAdded",
              "AdditionalRecipientMeteringPointRemoved"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/ActorAuditedChange"
              }
            ]
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "auditIdentityId": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "isInitialAssignment": {
            "type": "boolean",
            "readOnly": true
          },
          "currentValue": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "previousValue": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "ActorCertificateCredentialsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "thumbprint": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ActorClientSecretCredentialsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "clientSecretIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ActorClientSecretDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "secretText": {
            "type": "string"
          }
        }
      },
      "ActorConsolidationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "actorFromId": {
            "type": "string",
            "format": "uuid"
          },
          "actorToId": {
            "type": "string",
            "format": "uuid"
          },
          "consolidateAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "x-enumNames": [
              "Pending",
              "Executed"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/ActorConsolidationStatus"
              }
            ]
          }
        }
      },
      "ActorConsolidationStatus": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Pending",
          "Executed"
        ],
        "enum": [
          1,
          2
        ]
      },
      "ActorContactDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contactId": {
            "type": "string",
            "format": "uuid"
          },
          "actorId": {
            "type": "string",
            "format": "uuid"
          },
          "category": {
            "x-enumNames": [
              "Default",
              "Charges",
              "ChargeLinks",
              "ElectricalHeating",
              "EndOfSupply",
              "EnerginetInquiry",
              "ErrorReport",
              "IncorrectMove",
              "IncorrectSwitch",
              "MeasurementData",
              "MeteringPoint",
              "NetSettlement",
              "Notification",
              "Recon",
              "Reminder"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactCategory"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ActorCredentialsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "certificateCredentials": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ActorCertificateCredentialsDto"
              }
            ]
          },
          "clientSecretCredentials": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ActorClientSecretCredentialsDto"
              }
            ]
          }
        }
      },
      "ActorDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string",
            "format": "uuid"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string"
          },
          "actorNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActorNumberDto"
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActorNameDto"
              }
            ]
          },
          "marketRole": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActorMarketRoleDto"
              }
            ]
          }
        }
      },
      "ActorGridAreaDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "meteringPointTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ActorMarketRoleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eicFunction": {
            "x-enumNames": [
              "BalanceResponsibleParty",
              "BillingAgent",
              "EnergySupplier",
              "GridAccessProvider",
              "ImbalanceSettlementResponsible",
              "MeterOperator",
              "MeteredDataAdministrator",
              "MeteredDataResponsible",
              "MeteringPointAdministrator",
              "SystemOperator",
              "DanishEnergyAgency",
              "DataHubAdministrator",
              "IndependentAggregator",
              "SerialEnergyTrader",
              "Delegated",
              "ItSupplier"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EicFunction"
              }
            ]
          },
          "gridAreas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActorGridAreaDto"
            }
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ActorNameDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "ActorNumberDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "AddressDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string"
          }
        }
      },
      "AuditIdentityDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "auditIdentityId": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "BalanceResponsibilityRelationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "energySupplierId": {
            "type": "string",
            "format": "uuid"
          },
          "balanceResponsibleId": {
            "type": "string",
            "format": "uuid"
          },
          "gridAreaId": {
            "type": "string",
            "format": "uuid"
          },
          "meteringPointType": {
            "x-enumNames": [
              "Unknown",
              "D01VeProduction",
              "D02Analysis",
              "D03NotUsed",
              "D04SurplusProductionGroup6",
              "D05NetProduction",
              "D06SupplyToGrid",
              "D07ConsumptionFromGrid",
              "D08WholeSaleServicesInformation",
              "D09OwnProduction",
              "D10NetFromGrid",
              "D11NetToGrid",
              "D12TotalConsumption",
              "D13NetLossCorrection",
              "D14ElectricalHeating",
              "D15NetConsumption",
              "D17OtherConsumption",
              "D18OtherProduction",
              "D20ExchangeReactiveEnergy",
              "D99InternalUse",
              "E17Consumption",
              "E18Production",
              "E20Exchange"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/MeteringPointType"
              }
            ]
          },
          "validFrom": {
            "type": "string",
            "format": "date-time"
          },
          "validTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ChangeActorDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActorNameDto"
              }
            ]
          },
          "marketRole": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActorMarketRoleDto"
              }
            ]
          }
        }
      },
      "ChangeOrganizationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "domains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ConsolidationRequestDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "toActorId": {
            "type": "string",
            "format": "uuid"
          },
          "consolidateAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ContactCategory": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Default",
          "Charges",
          "ChargeLinks",
          "ElectricalHeating",
          "EndOfSupply",
          "EnerginetInquiry",
          "ErrorReport",
          "IncorrectMove",
          "IncorrectSwitch",
          "MeasurementData",
          "MeteringPoint",
          "NetSettlement",
          "Notification",
          "Recon",
          "Reminder"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14
        ]
      },
      "CreateActorContactDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "category": {
            "x-enumNames": [
              "Default",
              "Charges",
              "ChargeLinks",
              "ElectricalHeating",
              "EndOfSupply",
              "EnerginetInquiry",
              "ErrorReport",
              "IncorrectMove",
              "IncorrectSwitch",
              "MeasurementData",
              "MeteringPoint",
              "NetSettlement",
              "Notification",
              "Recon",
              "Reminder"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactCategory"
              }
            ]
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateActorDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "organizationId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActorNameDto"
              }
            ]
          },
          "actorNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActorNumberDto"
              }
            ]
          },
          "marketRole": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActorMarketRoleDto"
              }
            ]
          }
        }
      },
      "CreateOrganizationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "businessRegisterIdentifier": {
            "type": "string"
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressDto"
              }
            ]
          },
          "domains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateProcessDelegationsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "delegatedFrom": {
            "type": "string",
            "format": "uuid"
          },
          "delegatedTo": {
            "type": "string",
            "format": "uuid"
          },
          "gridAreas": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "delegatedProcesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DelegatedProcess"
            }
          },
          "startsAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateUserRoleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "x-enumNames": [
              "Active",
              "Inactive"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/UserRoleStatus"
              }
            ]
          },
          "eicFunction": {
            "x-enumNames": [
              "BalanceResponsibleParty",
              "BillingAgent",
              "EnergySupplier",
              "GridAccessProvider",
              "ImbalanceSettlementResponsible",
              "MeterOperator",
              "MeteredDataAdministrator",
              "MeteredDataResponsible",
              "MeteringPointAdministrator",
              "SystemOperator",
              "DanishEnergyAgency",
              "DataHubAdministrator",
              "IndependentAggregator",
              "SerialEnergyTrader",
              "Delegated",
              "ItSupplier"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EicFunction"
              }
            ]
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "DelegatedProcess": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "RequestEnergyResults",
          "ReceiveEnergyResults",
          "RequestWholesaleResults",
          "ReceiveWholesaleResults",
          "RequestMeteringPointData",
          "ReceiveMeteringPointData",
          "SendMeteringPointData",
          "ReceiveGapLog"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ]
      },
      "DelegationPeriodDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "delegatedTo": {
            "type": "string",
            "format": "uuid"
          },
          "gridAreaId": {
            "type": "string",
            "format": "uuid"
          },
          "startsAt": {
            "type": "string",
            "format": "date-time"
          },
          "stopsAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "EicFunction": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "BalanceResponsibleParty",
          "BillingAgent",
          "EnergySupplier",
          "GridAccessProvider",
          "ImbalanceSettlementResponsible",
          "MeterOperator",
          "MeteredDataAdministrator",
          "MeteredDataResponsible",
          "MeteringPointAdministrator",
          "SystemOperator",
          "DanishEnergyAgency",
          "DataHubAdministrator",
          "IndependentAggregator",
          "SerialEnergyTrader",
          "Delegated",
          "ItSupplier"
        ],
        "enum": [
          1,
          3,
          12,
          14,
          15,
          22,
          23,
          26,
          27,
          45,
          48,
          50,
          51,
          52,
          53,
          54
        ]
      },
      "ExchangeDownloadTokenDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "accessToken": {
            "type": "string"
          }
        }
      },
      "GetActorConsolidationsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "actorConsolidations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActorConsolidationDto"
            }
          }
        }
      },
      "GetActorsAssociatedWithExternalUserIdResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "actorIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "GetActorsAssociatedWithUserResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "administratedBy": {
            "type": "string",
            "format": "uuid"
          },
          "actorIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "GetDelegationsForActorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "delegations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessDelegationDto"
            }
          }
        }
      },
      "GetOrganizationIdentityResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "organizationFound": {
            "type": "boolean"
          },
          "organizationIdentity": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/OrganizationIdentityDto"
              }
            ]
          }
        }
      },
      "GetUserOverviewResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserOverviewItemDto"
            }
          },
          "totalUserCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetUserProfileResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "hasFederatedLogin": {
            "type": "boolean"
          }
        }
      },
      "GetUserResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "x-enumNames": [
              "Active",
              "Inactive",
              "Invited",
              "InviteExpired"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/UserStatus"
              }
            ]
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "administratedBy": {
            "type": "string",
            "format": "uuid"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "latestLoginAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "GridAreaAuditedChange": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Name",
          "ConsolidationRequested",
          "ConsolidationCompleted",
          "Decommissioned"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "GridAreaAuditedChangeAuditLogDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "change": {
            "readOnly": true,
            "x-enumNames": [
              "Name",
              "ConsolidationRequested",
              "ConsolidationCompleted",
              "Decommissioned"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/GridAreaAuditedChange"
              }
            ]
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "auditIdentityId": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "isInitialAssignment": {
            "type": "boolean",
            "readOnly": true
          },
          "currentValue": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "previousValue": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "GridAreaDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "priceAreaCode": {
            "type": "string"
          },
          "type": {
            "x-enumNames": [
              "NotSet",
              "Transmission",
              "Distribution",
              "Other",
              "Test",
              "GridLossDK",
              "GridLossAbroad",
              "Aboard"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/GridAreaType"
              }
            ]
          },
          "validFrom": {
            "type": "string",
            "format": "date-time"
          },
          "validTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "GridAreaOverviewItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "priceAreaCode": {
            "type": "string"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time"
          },
          "validTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actorNumber": {
            "type": "string",
            "nullable": true
          },
          "actorName": {
            "type": "string",
            "nullable": true
          },
          "organizationName": {
            "type": "string",
            "nullable": true
          },
          "fullFlexDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "x-enumNames": [
              "NotSet",
              "Transmission",
              "Distribution",
              "Other",
              "Test",
              "GridLossDK",
              "GridLossAbroad",
              "Aboard"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/GridAreaType"
              }
            ]
          },
          "toBeDiscontinued": {
            "type": "boolean"
          }
        }
      },
      "GridAreaType": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "NotSet",
          "Transmission",
          "Distribution",
          "Other",
          "Test",
          "GridLossDK",
          "GridLossAbroad",
          "Aboard"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ]
      },
      "InvitationUserDetailsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "MeteringPointDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "identification": {
            "type": "string"
          },
          "meteringPointType": {
            "x-enumNames": [
              "Unknown",
              "D01VeProduction",
              "D02Analysis",
              "D03NotUsed",
              "D04SurplusProductionGroup6",
              "D05NetProduction",
              "D06SupplyToGrid",
              "D07ConsumptionFromGrid",
              "D08WholeSaleServicesInformation",
              "D09OwnProduction",
              "D10NetFromGrid",
              "D11NetToGrid",
              "D12TotalConsumption",
              "D13NetLossCorrection",
              "D14ElectricalHeating",
              "D15NetConsumption",
              "D17OtherConsumption",
              "D18OtherProduction",
              "D20ExchangeReactiveEnergy",
              "D99InternalUse",
              "E17Consumption",
              "E18Production",
              "E20Exchange"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/MeteringPointType"
              }
            ]
          }
        }
      },
      "MeteringPointType": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Unknown",
          "D01VeProduction",
          "D02Analysis",
          "D03NotUsed",
          "D04SurplusProductionGroup6",
          "D05NetProduction",
          "D06SupplyToGrid",
          "D07ConsumptionFromGrid",
          "D08WholeSaleServicesInformation",
          "D09OwnProduction",
          "D10NetFromGrid",
          "D11NetToGrid",
          "D12TotalConsumption",
          "D13NetLossCorrection",
          "D14ElectricalHeating",
          "D15NetConsumption",
          "D17OtherConsumption",
          "D18OtherProduction",
          "D20ExchangeReactiveEnergy",
          "D99InternalUse",
          "E17Consumption",
          "E18Production",
          "E20Exchange"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22
        ]
      },
      "OrganizationAuditedChange": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Domain",
          "Name"
        ],
        "enum": [
          1,
          2
        ]
      },
      "OrganizationAuditedChangeAuditLogDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "change": {
            "readOnly": true,
            "x-enumNames": [
              "Domain",
              "Name"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/OrganizationAuditedChange"
              }
            ]
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "auditIdentityId": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "isInitialAssignment": {
            "type": "boolean",
            "readOnly": true
          },
          "currentValue": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "previousValue": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "OrganizationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "organizationId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "businessRegisterIdentifier": {
            "type": "string"
          },
          "domains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string"
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressDto"
              }
            ]
          }
        }
      },
      "OrganizationIdentityDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "PermissionAuditedChange": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Claim",
          "Description"
        ],
        "enum": [
          1,
          2
        ]
      },
      "PermissionAuditedChangeAuditLogDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "change": {
            "readOnly": true,
            "x-enumNames": [
              "Claim",
              "Description"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/PermissionAuditedChange"
              }
            ]
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "auditIdentityId": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "isInitialAssignment": {
            "type": "boolean",
            "readOnly": true
          },
          "currentValue": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "previousValue": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "PermissionDetailsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PermissionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "assignableTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EicFunction"
            }
          }
        }
      },
      "ProcessDelegationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "delegatedBy": {
            "type": "string",
            "format": "uuid"
          },
          "process": {
            "x-enumNames": [
              "RequestEnergyResults",
              "ReceiveEnergyResults",
              "RequestWholesaleResults",
              "ReceiveWholesaleResults",
              "RequestMeteringPointData",
              "ReceiveMeteringPointData",
              "SendMeteringPointData",
              "ReceiveGapLog"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/DelegatedProcess"
              }
            ]
          },
          "periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DelegationPeriodDto"
            }
          }
        }
      },
      "SelectionActorDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "gln": {
            "type": "string"
          },
          "actorName": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "marketRole": {
            "x-enumNames": [
              "BalanceResponsibleParty",
              "BillingAgent",
              "EnergySupplier",
              "GridAccessProvider",
              "ImbalanceSettlementResponsible",
              "MeterOperator",
              "MeteredDataAdministrator",
              "MeteredDataResponsible",
              "MeteringPointAdministrator",
              "SystemOperator",
              "DanishEnergyAgency",
              "DataHubAdministrator",
              "IndependentAggregator",
              "SerialEnergyTrader",
              "Delegated",
              "ItSupplier"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EicFunction"
              }
            ]
          }
        }
      },
      "SortDirection": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Asc",
          "Desc"
        ],
        "enum": [
          0,
          1
        ]
      },
      "StopProcessDelegationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "periodId": {
            "type": "string",
            "format": "uuid"
          },
          "stopsAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "TokenRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string",
            "format": "uuid"
          },
          "externalToken": {
            "type": "string"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "UpdatePermissionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "UpdateUserRoleAssignmentsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "removed": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "UpdateUserRoleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "x-enumNames": [
              "Active",
              "Inactive"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/UserRoleStatus"
              }
            ]
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "UserAuditedChange": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "FirstName",
          "LastName",
          "PhoneNumber",
          "Status",
          "InvitedIntoActor",
          "UserRoleAssigned",
          "UserRoleRemoved",
          "UserRoleRemovedDueToDeactivation",
          "UserLoginFederationRequested",
          "UserLoginFederated"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ]
      },
      "UserAuditedChangeAuditLogDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "change": {
            "readOnly": true,
            "x-enumNames": [
              "FirstName",
              "LastName",
              "PhoneNumber",
              "Status",
              "InvitedIntoActor",
              "UserRoleAssigned",
              "UserRoleRemoved",
              "UserRoleRemovedDueToDeactivation",
              "UserLoginFederationRequested",
              "UserLoginFederated"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/UserAuditedChange"
              }
            ]
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "auditIdentityId": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "isInitialAssignment": {
            "type": "boolean",
            "readOnly": true
          },
          "currentValue": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "previousValue": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "UserIdentityUpdateDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "UserInvitationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "invitationUserDetails": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/InvitationUserDetailsDto"
              }
            ]
          },
          "assignedActor": {
            "type": "string",
            "format": "uuid"
          },
          "assignedRoles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "UserOverviewFilterDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "actorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "searchText": {
            "type": "string",
            "nullable": true
          },
          "userRoleIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "userStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserStatus"
            }
          }
        }
      },
      "UserOverviewItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "x-enumNames": [
              "Active",
              "Inactive",
              "Invited",
              "InviteExpired"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/UserStatus"
              }
            ]
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "administratedBy": {
            "type": "string",
            "format": "uuid"
          },
          "latestLoginAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "UserOverviewSortProperty": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "FirstName",
          "LastName",
          "Email",
          "PhoneNumber",
          "CreatedDate",
          "Status",
          "LatestLoginAt"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "UserProfileUpdateDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "UserRoleAuditedChange": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Name",
          "Description",
          "Status",
          "PermissionAdded",
          "PermissionRemoved"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "UserRoleAuditedChangeAuditLogDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "change": {
            "readOnly": true,
            "x-enumNames": [
              "Name",
              "Description",
              "Status",
              "PermissionAdded",
              "PermissionRemoved"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/UserRoleAuditedChange"
              }
            ]
          },
          "timestamp": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "auditIdentityId": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "isInitialAssignment": {
            "type": "boolean",
            "readOnly": true
          },
          "currentValue": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "previousValue": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "UserRoleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "eicFunction": {
            "x-enumNames": [
              "BalanceResponsibleParty",
              "BillingAgent",
              "EnergySupplier",
              "GridAccessProvider",
              "ImbalanceSettlementResponsible",
              "MeterOperator",
              "MeteredDataAdministrator",
              "MeteredDataResponsible",
              "MeteringPointAdministrator",
              "SystemOperator",
              "DanishEnergyAgency",
              "DataHubAdministrator",
              "IndependentAggregator",
              "SerialEnergyTrader",
              "Delegated",
              "ItSupplier"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EicFunction"
              }
            ]
          },
          "status": {
            "x-enumNames": [
              "Active",
              "Inactive"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/UserRoleStatus"
              }
            ]
          }
        }
      },
      "UserRoleStatus": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Active",
          "Inactive"
        ],
        "enum": [
          1,
          2
        ]
      },
      "UserRoleWithPermissionsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "eicFunction": {
            "x-enumNames": [
              "BalanceResponsibleParty",
              "BillingAgent",
              "EnergySupplier",
              "GridAccessProvider",
              "ImbalanceSettlementResponsible",
              "MeterOperator",
              "MeteredDataAdministrator",
              "MeteredDataResponsible",
              "MeteringPointAdministrator",
              "SystemOperator",
              "DanishEnergyAgency",
              "DataHubAdministrator",
              "IndependentAggregator",
              "SerialEnergyTrader",
              "Delegated",
              "ItSupplier"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/EicFunction"
              }
            ]
          },
          "status": {
            "x-enumNames": [
              "Active",
              "Inactive"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/UserRoleStatus"
              }
            ]
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDetailsDto"
            }
          }
        }
      },
      "UserStatus": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Active",
          "Inactive",
          "Invited",
          "InviteExpired"
        ],
        "enum": [
          1,
          2,
          3,
          4
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [
        "Bearer"
      ]
    }
  ]
}