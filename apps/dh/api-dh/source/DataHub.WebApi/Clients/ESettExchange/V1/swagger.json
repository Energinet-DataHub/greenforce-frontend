{
  "openapi": "3.0.1",
  "info": {
    "title": "EsettExchangeWebApi",
    "version": "1.0"
  },
  "paths": {
    "/esett/balance-responsible": {
      "get": {
        "tags": [
          "BalanceResponsible"
        ],
        "operationId": "balance-responsible",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortProperty",
            "in": "query",
            "schema": {
              "x-enumNames": [
                "ValidFrom",
                "ValidTo",
                "ReceivedDate"
              ],
              "allOf": [
                {
                  "$ref": "#/components/schemas/BalanceResponsibleSortProperty"
                }
              ]
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "schema": {
              "x-enumNames": [
                "Ascending",
                "Descending"
              ],
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponsiblePageResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponsiblePageResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponsiblePageResult"
                }
              }
            }
          }
        }
      }
    },
    "/esett/balance-responsible/by-document-id/{documentId}": {
      "get": {
        "tags": [
          "BalanceResponsible"
        ],
        "operationId": "by-document-id",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponsibleResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponsibleResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponsibleResult"
                }
              }
            }
          }
        }
      }
    },
    "/esett/balance-responsible/download": {
      "get": {
        "tags": [
          "BalanceResponsible"
        ],
        "operationId": "downloadGET",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortProperty",
            "in": "query",
            "schema": {
              "x-enumNames": [
                "ValidFrom",
                "ValidTo",
                "ReceivedDate"
              ],
              "allOf": [
                {
                  "$ref": "#/components/schemas/BalanceResponsibleSortProperty"
                }
              ]
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "schema": {
              "x-enumNames": [
                "Ascending",
                "Descending"
              ],
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/csv": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/esett/balance-responsible/{documentId}/storageDocument": {
      "get": {
        "tags": [
          "BalanceResponsible"
        ],
        "operationId": "storageDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/esett/{documentId}": {
      "get": {
        "tags": [
          "ESett"
        ],
        "operationId": "esett",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeEventTrackingResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeEventTrackingResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeEventTrackingResult"
                }
              }
            }
          }
        }
      }
    },
    "/esett/{documentId}/dispatchDocument": {
      "get": {
        "tags": [
          "ESett"
        ],
        "operationId": "dispatchDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/esett/{documentId}/responseDocument": {
      "get": {
        "tags": [
          "ESett"
        ],
        "operationId": "responseDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/esett/search": {
      "post": {
        "tags": [
          "ESett"
        ],
        "operationId": "search",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExchangeEventSearchFilter"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExchangeEventSearchFilter"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExchangeEventSearchFilter"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeEventSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeEventSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeEventSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/esett/download": {
      "post": {
        "tags": [
          "ESett"
        ],
        "operationId": "downloadPOST",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExchangeEventDownloadFilter"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExchangeEventDownloadFilter"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExchangeEventDownloadFilter"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/csv": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/esett/statusReport": {
      "get": {
        "tags": [
          "ESett"
        ],
        "operationId": "statusReport",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeEventStatusReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeEventStatusReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeEventStatusReportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/esett/resendMessagesWithoutResponse": {
      "get": {
        "tags": [
          "ESett"
        ],
        "operationId": "resendMessagesWithoutResponse",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/esett/exchange-events/{documentId}/handle-manually": {
      "post": {
        "tags": [
          "ExchangeEvent"
        ],
        "operationId": "handle-manually",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Comment"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Comment"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Comment"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/esett/mga-imbalance/{imbalanceId}/document": {
      "get": {
        "tags": [
          "MeteringGridAreaImbalance"
        ],
        "operationId": "document",
        "parameters": [
          {
            "name": "imbalanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/esett/mga-imbalance/search": {
      "post": {
        "tags": [
          "MeteringGridAreaImbalance"
        ],
        "operationId": "search2",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MeteringGridAreaImbalanceSearchFilter"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MeteringGridAreaImbalanceSearchFilter"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MeteringGridAreaImbalanceSearchFilter"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MeteringGridAreaImbalanceSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeteringGridAreaImbalanceSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeteringGridAreaImbalanceSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/esett/mga-imbalance/download": {
      "post": {
        "tags": [
          "MeteringGridAreaImbalance"
        ],
        "operationId": "downloadPOST2",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MeteringGridAreaImbalanceDownloadFilter"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MeteringGridAreaImbalanceDownloadFilter"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MeteringGridAreaImbalanceDownloadFilter"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/csv": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "tags": [
          "Status"
        ],
        "operationId": "status",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadinessStatusDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadinessStatusDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadinessStatusDto"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BalanceResponsiblePageResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "page": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceResponsibleResult"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BalanceResponsibleResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "receivedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "supplier": {
            "type": "string"
          },
          "balanceResponsible": {
            "type": "string"
          },
          "meteringPointType": {
            "x-enumNames": [
              "MgaExchange",
              "Production",
              "Consumption"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/MeteringPointType"
              }
            ]
          },
          "validFromDate": {
            "type": "string",
            "format": "date-time"
          },
          "validToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gridArea": {
            "type": "string"
          }
        }
      },
      "BalanceResponsibleSortProperty": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "ValidFrom",
          "ValidTo",
          "ReceivedDate"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "CalculationType": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "BalanceFixing",
          "Aggregation"
        ],
        "enum": [
          1,
          2
        ]
      },
      "Comment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "DocumentStatus": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Received",
          "AwaitingDispatch",
          "AwaitingReply",
          "Accepted",
          "Rejected",
          "BizTalkAccepted",
          "ManuallyHandled"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ]
      },
      "ESettStageComponent": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Converter",
          "Sender",
          "Receiver"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "ExchangeEventDownloadFilter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExchangeEventFilter"
              }
            ]
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExchangeEventSortPropertySorting"
              }
            ]
          }
        }
      },
      "ExchangeEventFilter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "calculationType": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CalculationType"
              }
            ]
          },
          "timeSeriesType": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeSeriesType"
              }
            ]
          },
          "gridAreaCodes": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "documentStatuses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DocumentStatus"
            }
          },
          "periodFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "periodTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "latestDispatchedFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "latestDispatchedTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "documentId": {
            "type": "string",
            "nullable": true
          },
          "actorNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExchangeEventSearchFilter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExchangeEventFilter"
              }
            ]
          },
          "sorting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExchangeEventSortPropertySorting"
              }
            ]
          }
        }
      },
      "ExchangeEventSearchResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangeEventSearchResult"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "gridAreaCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ExchangeEventSearchResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "documentId": {
            "type": "string"
          },
          "gridAreaCode": {
            "type": "string"
          },
          "actorNumber": {
            "type": "string",
            "nullable": true
          },
          "gridAreaCodeOut": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "calculationType": {
            "x-enumNames": [
              "BalanceFixing",
              "Aggregation"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/CalculationType"
              }
            ]
          },
          "timeSeriesType": {
            "x-enumNames": [
              "MgaExchange",
              "Production",
              "Consumption"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeSeriesType"
              }
            ]
          },
          "documentStatus": {
            "x-enumNames": [
              "Received",
              "AwaitingDispatch",
              "AwaitingReply",
              "Accepted",
              "Rejected",
              "BizTalkAccepted",
              "ManuallyHandled"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentStatus"
              }
            ]
          },
          "lastDispatched": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ExchangeEventSortProperty": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "CalculationType",
          "Created",
          "DocumentId",
          "DocumentStatus",
          "GridAreaCode",
          "TimeSeriesType",
          "LatestDispatched"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "ExchangeEventSortPropertySorting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sortProperty": {
            "x-enumNames": [
              "CalculationType",
              "Created",
              "DocumentId",
              "DocumentStatus",
              "GridAreaCode",
              "TimeSeriesType",
              "LatestDispatched"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/ExchangeEventSortProperty"
              }
            ]
          },
          "direction": {
            "x-enumNames": [
              "Ascending",
              "Descending"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDirection"
              }
            ]
          }
        }
      },
      "ExchangeEventStatusReportResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "waitingForExternalResponse": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ExchangeEventTrackingResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "documentId": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "gridAreaCode": {
            "type": "string"
          },
          "calculationType": {
            "x-enumNames": [
              "BalanceFixing",
              "Aggregation"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/CalculationType"
              }
            ]
          },
          "timeSeriesType": {
            "x-enumNames": [
              "MgaExchange",
              "Production",
              "Consumption"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeSeriesType"
              }
            ]
          },
          "periodFrom": {
            "type": "string",
            "format": "date-time"
          },
          "periodTo": {
            "type": "string",
            "format": "date-time"
          },
          "documentStatus": {
            "x-enumNames": [
              "Received",
              "AwaitingDispatch",
              "AwaitingReply",
              "Accepted",
              "Rejected",
              "BizTalkAccepted",
              "ManuallyHandled"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentStatus"
              }
            ]
          },
          "lastDispatched": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "manuallyHandledExchangeEventMetaData": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ManuallyHandledExchangeEventMetaData"
              }
            ]
          }
        }
      },
      "ManuallyHandledExchangeEventMetaData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "comment": {
            "type": "string"
          },
          "manuallyHandledAt": {
            "type": "string",
            "format": "date-time"
          },
          "manuallyHandledBy": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "MeteringGridAreaImbalanceDownloadFilter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeteringGridAreaImbalanceFilter"
              }
            ]
          }
        }
      },
      "MeteringGridAreaImbalanceFilter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "gridAreaCodes": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "createdFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "calculationPeriodFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "calculationPeriodTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "documentId": {
            "type": "string",
            "nullable": true
          },
          "meteringGridImbalanceValuesToInclude": {
            "x-enumNames": [
              "Imbalances",
              "Balances",
              "Both"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/MeteringGridImbalanceValuesToInclude"
              }
            ]
          },
          "sortProperty": {
            "x-enumNames": [
              "DocumentDateTime",
              "GridAreaCode",
              "DocumentId",
              "ReceivedDateTime"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/MeteringGridAreaImbalanceSortProperty"
              }
            ]
          },
          "sortDirection": {
            "x-enumNames": [
              "Ascending",
              "Descending"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDirection"
              }
            ]
          }
        }
      },
      "MeteringGridAreaImbalancePerDayDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "imbalanceDay": {
            "type": "string",
            "format": "date-time"
          },
          "firstOccurrenceOfImbalance": {
            "type": "string",
            "format": "date-time"
          },
          "firstPositionOfImbalance": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "MeteringGridAreaImbalanceSearchFilter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeteringGridAreaImbalanceFilter"
              }
            ]
          }
        }
      },
      "MeteringGridAreaImbalanceSearchResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeteringGridAreaImbalanceSearchResult"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MeteringGridAreaImbalanceSearchResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "gridAreaCode": {
            "type": "string"
          },
          "documentDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "receivedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "periodStart": {
            "type": "string",
            "format": "date-time"
          },
          "periodEnd": {
            "type": "string",
            "format": "date-time"
          },
          "incomingImbalancePerDay": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeteringGridAreaImbalancePerDayDto"
            }
          },
          "outgoingImbalancePerDay": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeteringGridAreaImbalancePerDayDto"
            }
          }
        }
      },
      "MeteringGridAreaImbalanceSortProperty": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "DocumentDateTime",
          "GridAreaCode",
          "DocumentId",
          "ReceivedDateTime"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "MeteringGridImbalanceValuesToInclude": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Imbalances",
          "Balances",
          "Both"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "MeteringPointType": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "MgaExchange",
          "Production",
          "Consumption"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "ReadinessStatusDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "component": {
            "x-enumNames": [
              "Converter",
              "Sender",
              "Receiver"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/ESettStageComponent"
              }
            ]
          },
          "isReady": {
            "type": "boolean"
          }
        }
      },
      "SortDirection": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Ascending",
          "Descending"
        ],
        "enum": [
          0,
          1
        ]
      },
      "TimeSeriesType": {
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "MgaExchange",
          "Production",
          "Consumption"
        ],
        "enum": [
          1,
          2,
          3
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [
        "Bearer"
      ]
    }
  ]
}