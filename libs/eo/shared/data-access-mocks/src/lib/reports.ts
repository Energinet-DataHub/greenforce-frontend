//#region License
/**
 * @license
 * Copyright 2020 Energinet DataHub A/S
 *
 * Licensed under the Apache License, Version 2.0 (the "License2");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//#endregion
import { http, HttpResponse } from 'msw';

export function reportsMocks(apiBase: string) {
  return [postReport(apiBase), getReports(apiBase), downloadReport(apiBase)];
}

function postReport(apiBase: string) {
  return http.post(`${apiBase}/reports`, async ({ request }) => {
    const requestBody = (await request.json()) as { startDate: number; endDate: number } | null;

    if (!requestBody) return new HttpResponse(null, { status: 400 });

    return HttpResponse.json({ status: 202 });
  });
}

function getReports(apiBase: string) {
  return http.get(`${apiBase}/reports`, () => {
    const data = {
      result: [
        {
          id: '7dd9e6ad-77f7-4ed1-b71f-6b6df6932e37',
          createdAt: new Date().getTime() / 1000,
          status: 'Pending',
        },
        {
          id: 'd356b925-5942-4c74-9135-11925b448146',
          createdAt: (new Date().getTime() - 2629746000) / 1000,
          status: 'Completed',
        },
        {
          id: 'a51a5b10-aa41-4601-b187-8b07e2cbf20b',
          createdAt: (new Date().getTime() - 15556952000) / 1000,
          status: 'Failed',
        },
      ],
    };

    return HttpResponse.json(data, { status: 200 });
  });
}

function downloadReport(apiBase: string) {
  return http.get(`${apiBase}/reports/:reportId/download`, async () => {
    // Minimal PDF structure
    const emptyPdf = new Blob(
      [new Uint8Array([0x25, 0x50, 0x44, 0x46, 0x2d, 0x31, 0x2e, 0x33, 0x0a, 0x25, 0xe2, 0xe3, 0xcf, 0xd3, 0x0a, 0x0a, 0x31, 0x20, 0x30, 0x20, 0x6f, 0x62, 0x6a, 0x0a, 0x3c, 0x3c, 0x2f, 0x54, 0x79, 0x70, 0x65, 0x2f, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x50, 0x61, 0x67, 0x65, 0x73, 0x20, 0x32, 0x20, 0x30, 0x20, 0x52, 0x3e, 0x3e, 0x0a, 0x65, 0x6e, 0x64, 0x6f, 0x62, 0x6a, 0x0a, 0x0a, 0x32, 0x20, 0x30, 0x20, 0x6f, 0x62, 0x6a, 0x0a, 0x3c, 0x3c, 0x2f, 0x54, 0x79, 0x70, 0x65, 0x2f, 0x50, 0x61, 0x67, 0x65, 0x2f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x31, 0x20, 0x30, 0x20, 0x52, 0x3e, 0x3e, 0x0a, 0x65, 0x6e, 0x64, 0x6f, 0x62, 0x6a, 0x0a, 0x0a, 0x78, 0x72, 0x65, 0x66, 0x0a, 0x30, 0x20, 0x32, 0x0a, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x20, 0x36, 0x35, 0x35, 0x33, 0x35, 0x20, 0x66, 0x0a, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x20, 0x30, 0x30, 0x30, 0x30, 0x30, 0x20, 0x6e, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x0a, 0x3c, 0x3c, 0x2f, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x31, 0x20, 0x30, 0x20, 0x52, 0x3e, 0x3e, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x78, 0x72, 0x65, 0x66, 0x0a, 0x25, 0x25, 0x45, 0x4f, 0x46, 0x0a])],
      { type: 'application/pdf' }
    );
    console.log('emptyPdf', emptyPdf);

    return new HttpResponse(emptyPdf, {
      status: 200,
      headers: {
        'Content-Type': 'application/pdf',
        'Content-Disposition': 'attachment; filename="empty-report.pdf"',
      },
    });
  });
}

